{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\Walter\\\\dev\\\\tipCalc\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Button } from 'react-native-paper';\nimport Hello from \"./Hello\";\n\nvar App = function (_React$Component) {\n  _inherits(App, _React$Component);\n\n  var _super = _createSuper(App);\n\n  function App() {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this);\n    _this.state = {\n      inputValue: '',\n      tip: 0.2\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"updateCustomTip\",\n    value: function updateCustomTip(customTip) {\n      if (!customTip) {\n        this.setState({\n          tip: 0\n        });\n        return;\n      } else {\n        this.setState({\n          tip: parseFloat(customTip) / 100\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var tip = 0.00;\n\n      if (this.state.inputValue) {\n        tip = parseFloat(this.state.inputValue) * this.state.tip;\n        tip = (Math.round(tip * 100) / 100).toFixed(2);\n      }\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        style: styles.customTipContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, React.createElement(TextInput, {\n        value: (this.state.tip * 100).toString(),\n        style: styles.customTip,\n        keyboardType: \"numeric\",\n        placeholder: \"0.00\",\n        onChangeText: function onChangeText(customTip) {\n          return _this2.updateCustomTip(customTip);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }\n      })), React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }\n      }, \"$\", tip), React.createElement(TextInput, {\n        value: this.state.inputValue,\n        style: styles.textInput,\n        keyboardType: \"numeric\",\n        placeholder: \"$0.00\",\n        onChangeText: function onChangeText(billTotal) {\n          return _this2.setState({\n            inputValue: billTotal\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        style: styles.tipList,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.buttonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }\n      }, React.createElement(Button, {\n        mode: \"contained\",\n        title: \"10%\",\n        style: styles.tipButton,\n        onPress: function onPress() {\n          _this2.setState({\n            tip: '0.1'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }\n      }, \"10%\")), React.createElement(View, {\n        style: styles.buttonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }\n      }, React.createElement(Button, {\n        mode: \"contained\",\n        title: \"15%\",\n        style: styles.tipButton,\n        onPress: function onPress() {\n          _this2.setState({\n            tip: '0.15'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }\n      }, \"15%\")), React.createElement(View, {\n        style: styles.buttonContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }\n      }, React.createElement(Button, {\n        mode: \"contained\",\n        title: \"20%\",\n        style: styles.tipButton,\n        onPress: function onPress() {\n          _this2.setState({\n            tip: '0.2'\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }\n      }, \"20%\"))));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nexport { App as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: 20\n  },\n  textInput: {\n    height: 60,\n    fontSize: 20,\n    borderColor: '#333',\n    borderWidth: 1,\n    width: '100%',\n    padding: 10,\n    alignItems: 'center',\n    textAlign: 'center'\n  },\n  customTipContainer: {\n    padding: 20,\n    alignItems: 'center',\n    textAlign: 'center',\n    borderBottomWidth: 1,\n    borderLeftWidth: .5\n  },\n  customTip: {\n    fontSize: 40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    alignContent: 'space-between'\n  },\n  tipList: {\n    flexDirection: 'row'\n  },\n  buttonContainer: {\n    padding: 10\n  },\n  tipButton: {\n    padding: 10\n  }\n});","map":{"version":3,"sources":["C:/Users/Walter/dev/tipCalc/App.js"],"names":["StatusBar","React","Button","Hello","App","state","inputValue","tip","customTip","setState","parseFloat","Math","round","toFixed","styles","container","customTipContainer","toString","updateCustomTip","textInput","billTotal","tipList","buttonContainer","tipButton","Component","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","padding","height","fontSize","borderColor","borderWidth","width","textAlign","borderBottomWidth","borderLeftWidth","alignContent","flexDirection"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport { TextInput, StyleSheet, View, Text, } from 'react-native';\nimport { Button } from 'react-native-paper';\n\n\nimport Hello from './Hello'\n\nexport default class App extends React.Component {\n  constructor() {\n    super();\n    this.state = { \n      inputValue: '',\n      tip: 0.2\n    }\n  }\n\n\n  updateCustomTip(customTip) {\n    if (!customTip) {\n      this.setState({\n        tip: 0\n      })\n      return;\n    }\n    else {\n      this.setState({\n        tip: parseFloat(customTip) / 100\n      })\n    }\n\n  }\n\n  render() {\n    let tip = 0.00;\n    if (this.state.inputValue) {\n      tip = parseFloat(this.state.inputValue) * this.state.tip;\n      tip = (Math.round(tip * 100) / 100).toFixed(2);\n    }\n\n    return (\n\n      <View style={styles.container}>\n\n        <View style={styles.customTipContainer}>\n          <TextInput\n            value={(this.state.tip * 100).toString()}\n            style={styles.customTip}\n            keyboardType='numeric'\n            placeholder='0.00'\n            onChangeText={customTip => this.updateCustomTip(customTip)}\n            />\n        </View>\n\n        <Text>\n          ${tip}\n        </Text>\n\n        <TextInput\n          value={ this.state.inputValue }\n          style={styles.textInput}\n          keyboardType='numeric'\n          placeholder='$0.00'\n          onChangeText={(billTotal)=>this.setState({inputValue: billTotal})}\n        />\n\n        <View style={styles.tipList}>\n          <View style={styles.buttonContainer}>\n            <Button mode='contained'\n              title='10%'\n              style={styles.tipButton}\n              onPress={()=>{\n                this.setState({ tip: '0.1' });\n              \n              }}>\n              10%\n            </Button>\n          </View>\n\n          <View style={styles.buttonContainer}>\n            <Button mode='contained'\n              title='15%'\n              style={styles.tipButton}\n              onPress={() => { \n                this.setState({ tip: '0.15' });\n              \n              }}>\n              15%\n            </Button>\n          </View>\n\n          <View style={styles.buttonContainer}>\n            <Button mode='contained'\n              title='20%'\n              style={styles.tipButton}\n              onPress={()=>{\n                this.setState({ tip: '0.2' });\n                \n              }}>\n              20%\n            </Button>\n          </View>\n        </View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding:20,\n    \n  },\n  textInput: {\n    height: 60,\n    fontSize:20,\n    borderColor: '#333',\n    borderWidth: 1,\n    width: '100%',\n    padding: 10,\n    alignItems: 'center',\n    textAlign: 'center'\n  },\n  customTipContainer: {\n    padding: 20,\n    alignItems: 'center',\n    textAlign: 'center',\n    borderBottomWidth: 1,\n    borderLeftWidth:.5\n  },\n  customTip: {\n    fontSize:40,\n    alignItems: 'center',\n    justifyContent: 'center',\n    alignContent: 'space-between',\n  },\n  tipList: {\n    flexDirection: 'row',  \n  },\n  buttonContainer: {\n    padding: 10\n  },  \n  tipButton: {\n    padding:10,\n  },\n  \n});\n"]},"metadata":{},"sourceType":"module"}